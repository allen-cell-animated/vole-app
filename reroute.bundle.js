/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./public/gh-reroute/index.tsx":
/*!*************************************!*\
  !*** ./public/gh-reroute/index.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _website_utils_gh_route_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../website/utils/gh_route_utils */ \"./website/utils/gh_route_utils.ts\");\n\n\n// Hide the default 404 page content and just show a blank screen.\n// The content should only be shown if the browser doesn't support JavaScript.\nwindow.onload = function () {\n  document.body.innerHTML = \"\";\n};\n\n// This script is used in the 404.html page to redirect the browser to the correct URL.\n// Convert the current URL to a query string path and redirect the browser.\nvar location = window.location;\nvar locationUrl = new URL(location.toString());\nvar newUrl = (0,_website_utils_gh_route_utils__WEBPACK_IMPORTED_MODULE_0__.encodeGitHubPagesUrl)(locationUrl);\nlocation.replace(newUrl);\nconsole.log(\"Redirecting to \" + newUrl.toString());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvZ2gtcmVyb3V0ZS9pbmRleC50c3giLCJtYXBwaW5ncyI6Ijs7QUFBMEU7O0FBRTFFO0FBQ0E7QUFDQUMsTUFBTSxDQUFDQyxNQUFNLEdBQUcsWUFBTTtFQUNwQkMsUUFBUSxDQUFDQyxJQUFJLENBQUNDLFNBQVMsR0FBRyxFQUFFO0FBQzlCLENBQUM7O0FBRUQ7QUFDQTtBQUNBLElBQU1DLFFBQVEsR0FBR0wsTUFBTSxDQUFDSyxRQUFRO0FBQ2hDLElBQU1DLFdBQVcsR0FBRyxJQUFJQyxHQUFHLENBQUNGLFFBQVEsQ0FBQ0csUUFBUSxDQUFDLENBQUMsQ0FBQztBQUNoRCxJQUFNQyxNQUFNLEdBQUdWLG1GQUFvQixDQUFDTyxXQUFXLENBQUM7QUFDaERELFFBQVEsQ0FBQ0ssT0FBTyxDQUFDRCxNQUFNLENBQUM7QUFDeEJFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGlCQUFpQixHQUFHSCxNQUFNLENBQUNELFFBQVEsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYWljcy93ZWItM2Qtdmlld2VyLy4vcHVibGljL2doLXJlcm91dGUvaW5kZXgudHN4Pzg4ZmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jb2RlR2l0SHViUGFnZXNVcmwgfSBmcm9tIFwiLi4vLi4vd2Vic2l0ZS91dGlscy9naF9yb3V0ZV91dGlsc1wiO1xuXG4vLyBIaWRlIHRoZSBkZWZhdWx0IDQwNCBwYWdlIGNvbnRlbnQgYW5kIGp1c3Qgc2hvdyBhIGJsYW5rIHNjcmVlbi5cbi8vIFRoZSBjb250ZW50IHNob3VsZCBvbmx5IGJlIHNob3duIGlmIHRoZSBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBKYXZhU2NyaXB0Llxud2luZG93Lm9ubG9hZCA9ICgpID0+IHtcbiAgZG9jdW1lbnQuYm9keS5pbm5lckhUTUwgPSBcIlwiO1xufTtcblxuLy8gVGhpcyBzY3JpcHQgaXMgdXNlZCBpbiB0aGUgNDA0Lmh0bWwgcGFnZSB0byByZWRpcmVjdCB0aGUgYnJvd3NlciB0byB0aGUgY29ycmVjdCBVUkwuXG4vLyBDb252ZXJ0IHRoZSBjdXJyZW50IFVSTCB0byBhIHF1ZXJ5IHN0cmluZyBwYXRoIGFuZCByZWRpcmVjdCB0aGUgYnJvd3Nlci5cbmNvbnN0IGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uO1xuY29uc3QgbG9jYXRpb25VcmwgPSBuZXcgVVJMKGxvY2F0aW9uLnRvU3RyaW5nKCkpO1xuY29uc3QgbmV3VXJsID0gZW5jb2RlR2l0SHViUGFnZXNVcmwobG9jYXRpb25VcmwpO1xubG9jYXRpb24ucmVwbGFjZShuZXdVcmwpO1xuY29uc29sZS5sb2coXCJSZWRpcmVjdGluZyB0byBcIiArIG5ld1VybC50b1N0cmluZygpKTtcbiJdLCJuYW1lcyI6WyJlbmNvZGVHaXRIdWJQYWdlc1VybCIsIndpbmRvdyIsIm9ubG9hZCIsImRvY3VtZW50IiwiYm9keSIsImlubmVySFRNTCIsImxvY2F0aW9uIiwibG9jYXRpb25VcmwiLCJVUkwiLCJ0b1N0cmluZyIsIm5ld1VybCIsInJlcGxhY2UiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/gh-reroute/index.tsx\n");

/***/ }),

/***/ "./website/utils/gh_route_utils.ts":
/*!*****************************************!*\
  !*** ./website/utils/gh_route_utils.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeGitHubPagesUrl: () => (/* binding */ decodeGitHubPagesUrl),\n/* harmony export */   decodeUrlQueryStringPath: () => (/* binding */ decodeUrlQueryStringPath),\n/* harmony export */   encodeGitHubPagesUrl: () => (/* binding */ encodeGitHubPagesUrl),\n/* harmony export */   encodeUrlPathAsQueryString: () => (/* binding */ encodeUrlPathAsQueryString),\n/* harmony export */   isEncodedPathUrl: () => (/* binding */ isEncodedPathUrl),\n/* harmony export */   tryRemoveHashRouting: () => (/* binding */ tryRemoveHashRouting)\n/* harmony export */ });\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nvar ESCAPED_AMPERSAND = \"~and~\";\n\n/**\n * Encodes the path component of a URL into a query string. Used to redirect the browser\n * for single-page apps when the server is not configured to serve the app for all paths,\n * e.g. GitHub pages.\n *\n * Adapted from https://github.com/rafgraph/spa-github-pages.\n *\n * The original path will be converted into a query string, and the original query string will be\n * escaped and separated with an `&` character.\n *\n * @example\n * ```\n * const url = \"https://www.example.com/one/two?a=b&c=d#qwe\";\n * //                               Original: \"https://www.example.com/one/two?a=b&c=d#qwe\"\n * convertUrlToQueryStringPath(url, 0); // => \"https://www.example.com/?/one/two&a=b~and~c=d#qwe\"\n * convertUrlToQueryStringPath(url, 1); // => \"https://www.example.com/one/?/two&a=b~and~c=d#qwe\"\n * ```\n *\n * @param url - The URL to convert.\n * @param basePathSegments - The number of path segments to keep in the URL. 0 by default.\n *\n * @returns The URL with the path converted to a query string, and the original query string escaped.\n */\nfunction encodeUrlPathAsQueryString(url) {\n  var basePathSegments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var pathSegments = url.pathname.split(\"/\");\n  var basePath = pathSegments.slice(0, basePathSegments + 1).join(\"/\");\n  var remainingPath = pathSegments.slice(basePathSegments + 1).join(\"/\");\n  // Remove the \"?\" and replace with an \"&\" to separate the path from the original query string.\n  // Escape existing ampersands with \"~and~\" so \"&\" is preserved as our path/query separator.\n  var queryPath = remainingPath.replace(/&/g, ESCAPED_AMPERSAND);\n  var queryString = url.search ? url.search.slice(1).replace(/&/g, ESCAPED_AMPERSAND) : \"\";\n  var newUrl = \"\".concat(url.origin).concat(basePath, \"/?/\").concat(queryPath);\n  newUrl += queryString ? \"&\".concat(queryString) : \"\";\n  newUrl += url.hash;\n  return new URL(newUrl);\n}\n\n/**\n * Converts a query string back into a complete URL. Used in combination with `convertUrlToQueryStringPath()`.\n * to redirect the browser for single-page apps when the server cannot be configured, e.g. GitHub pages.\n * Adapted from https://github.com/rafgraph/spa-github-pages.\n *\n * @param url - The URL with a path converted to a query string, and the original query string escaped.\n * @returns The original URL, with path instead of a query string.\n */\nfunction decodeUrlQueryStringPath(url) {\n  if (!url.search || !url.search.startsWith(\"?/\")) {\n    return url;\n  }\n  var newPathAndQueryString = url.search.slice(2) // Remove first ? character and slash\n  .split(\"&\") // Split the original path [idx 0] and query string [idx 1]\n  .map(function (s) {\n    return s.replace(new RegExp(ESCAPED_AMPERSAND, \"g\"), \"&\");\n  }) // Restore escaped ampersands\n  .join(\"?\"); // Rejoin the path and query string\n\n  return new URL(\"\".concat(url.origin).concat(url.pathname).concat(newPathAndQueryString).concat(url.hash));\n}\nfunction isEncodedPathUrl(url) {\n  return url.search !== \"\" && url.search.startsWith(\"?/\");\n}\n\n/**\n * Encodes a URL for GitHub pages by converting the path to a query string.\n * See `encodeUrlPathAsQueryString()` for more details.\n */\nfunction encodeGitHubPagesUrl(url) {\n  url = new URL(url); // Clone the URL to avoid modifying the original\n  if (url.hostname === \"allen-cell-animated.github.io\") {\n    if (url.pathname.toString().includes(\"pr-preview\")) {\n      return encodeUrlPathAsQueryString(url, 3);\n    }\n    // Redirect `/main` paths back to root `/`\n    if (url.pathname.toString().includes(\"main\")) {\n      url.pathname = url.pathname.replace(\"/main\", \"\");\n    }\n    return encodeUrlPathAsQueryString(url, 1);\n  }\n  return url;\n}\n\n/**\n * Decodes a URL that was encoded for GitHub pages, e.g. by `encodeGitHubPagesUrl()`.\n * See `decodeUrlQueryStringPath()` for more details.\n */\nfunction decodeGitHubPagesUrl(url) {\n  return decodeUrlQueryStringPath(url);\n}\n\n/**\n * Changes URLs with hash-based routing to path-based routing by removing the hash from\n * the URL. Does nothing to URLs that do not use hash-based routing.\n */\nfunction tryRemoveHashRouting(url) {\n  // Remove #/ from the URL path\n  if (url.hash.startsWith(\"#/\")) {\n    var hashContents = url.hash.slice(2);\n    var _hashContents$split = hashContents.split(\"?\"),\n      _hashContents$split2 = _slicedToArray(_hashContents$split, 2),\n      path = _hashContents$split2[0],\n      queryParams = _hashContents$split2[1];\n    url.pathname += path;\n    url.search = queryParams ? \"?\".concat(queryParams) : \"\";\n    url.hash = \"\";\n  }\n  return url;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./website/utils/gh_route_utils.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./public/gh-reroute/index.tsx");
/******/ 	
/******/ })()
;