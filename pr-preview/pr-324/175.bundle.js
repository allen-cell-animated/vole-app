"use strict";(self.webpackChunk_aics_web_3d_viewer=self.webpackChunk_aics_web_3d_viewer||[]).push([[175],{9175:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _pako_esm_856454b6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3056);\n\n\nvar _a;\nconst GZip = (_a = class {\n  constructor(level = 1) {\n    if (level < 0 || level > 9) {\n      throw new Error("Invalid gzip compression level, it should be between 0 and 9");\n    }\n    this.level = level;\n  }\n  static fromConfig({ level }) {\n    return new _a(level);\n  }\n  encode(data) {\n    const gzipped = _pako_esm_856454b6_js__WEBPACK_IMPORTED_MODULE_0__.p.gzip(data, { level: this.level });\n    return gzipped;\n  }\n  decode(data, out) {\n    const uncompressed = _pako_esm_856454b6_js__WEBPACK_IMPORTED_MODULE_0__.p.ungzip(data);\n    if (out !== void 0) {\n      out.set(uncompressed);\n      return out;\n    }\n    return uncompressed;\n  }\n}, _a.codecId = "gzip", _a);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GZip);\n\n\n//# sourceURL=webpack://@aics/web-3d-viewer/./node_modules/numcodecs/gzip.js?')}}]);