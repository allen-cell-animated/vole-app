{"version":3,"file":"647.bundle.js","mappings":"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","sources":["webpack://@aics/vole-app/webpack/runtime/chunk loaded","webpack://@aics/vole-app/webpack/runtime/startup chunk dependencies","webpack://@aics/vole-app/./node_modules/serialize-error/index.js","webpack://@aics/vole-app/./node_modules/@aics/vole-core/es/loaders/VolumeLoadError.js","webpack://@aics/vole-app/./node_modules/@aics/vole-core/es/workers/FetchTiffWorker.js","webpack://@aics/vole-app/webpack/bootstrap","webpack://@aics/vole-app/webpack/runtime/define property getters","webpack://@aics/vole-app/webpack/runtime/ensure chunk","webpack://@aics/vole-app/webpack/runtime/get javascript chunk filename","webpack://@aics/vole-app/webpack/runtime/get mini-css chunk filename","webpack://@aics/vole-app/webpack/runtime/hasOwnProperty shorthand","webpack://@aics/vole-app/webpack/runtime/make namespace object","webpack://@aics/vole-app/webpack/runtime/publicPath","webpack://@aics/vole-app/webpack/runtime/importScripts chunk loading","webpack://@aics/vole-app/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(714).then(next);\n};","import errorConstructors from './error-constructors.js';\n\nexport class NonError extends Error {\n\tname = 'NonError';\n\n\tconstructor(message) {\n\t\tsuper(NonError._prepareSuperMessage(message));\n\t}\n\n\tstatic _prepareSuperMessage(message) {\n\t\ttry {\n\t\t\treturn JSON.stringify(message);\n\t\t} catch {\n\t\t\treturn String(message);\n\t\t}\n\t}\n}\n\nconst commonProperties = [\n\t{\n\t\tproperty: 'name',\n\t\tenumerable: false,\n\t},\n\t{\n\t\tproperty: 'message',\n\t\tenumerable: false,\n\t},\n\t{\n\t\tproperty: 'stack',\n\t\tenumerable: false,\n\t},\n\t{\n\t\tproperty: 'code',\n\t\tenumerable: true,\n\t},\n\t{\n\t\tproperty: 'cause',\n\t\tenumerable: false,\n\t},\n];\n\nconst toJsonWasCalled = new WeakSet();\n\nconst toJSON = from => {\n\ttoJsonWasCalled.add(from);\n\tconst json = from.toJSON();\n\ttoJsonWasCalled.delete(from);\n\treturn json;\n};\n\nconst getErrorConstructor = name => errorConstructors.get(name) ?? Error;\n\n// eslint-disable-next-line complexity\nconst destroyCircular = ({\n\tfrom,\n\tseen,\n\tto,\n\tforceEnumerable,\n\tmaxDepth,\n\tdepth,\n\tuseToJSON,\n\tserialize,\n}) => {\n\tif (!to) {\n\t\tif (Array.isArray(from)) {\n\t\t\tto = [];\n\t\t} else if (!serialize && isErrorLike(from)) {\n\t\t\tconst Error = getErrorConstructor(from.name);\n\t\t\tto = new Error();\n\t\t} else {\n\t\t\tto = {};\n\t\t}\n\t}\n\n\tseen.push(from);\n\n\tif (depth >= maxDepth) {\n\t\treturn to;\n\t}\n\n\tif (useToJSON && typeof from.toJSON === 'function' && !toJsonWasCalled.has(from)) {\n\t\treturn toJSON(from);\n\t}\n\n\tconst continueDestroyCircular = value => destroyCircular({\n\t\tfrom: value,\n\t\tseen: [...seen],\n\t\tforceEnumerable,\n\t\tmaxDepth,\n\t\tdepth,\n\t\tuseToJSON,\n\t\tserialize,\n\t});\n\n\tfor (const [key, value] of Object.entries(from)) {\n\t\tif (value && value instanceof Uint8Array && value.constructor.name === 'Buffer') {\n\t\t\tto[key] = '[object Buffer]';\n\t\t\tcontinue;\n\t\t}\n\n\t\t// TODO: Use `stream.isReadable()` when targeting Node.js 18.\n\t\tif (value !== null && typeof value === 'object' && typeof value.pipe === 'function') {\n\t\t\tto[key] = '[object Stream]';\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (typeof value === 'function') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!value || typeof value !== 'object') {\n\t\t\t// Gracefully handle non-configurable errors like `DOMException`.\n\t\t\ttry {\n\t\t\t\tto[key] = value;\n\t\t\t} catch {}\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!seen.includes(from[key])) {\n\t\t\tdepth++;\n\t\t\tto[key] = continueDestroyCircular(from[key]);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tto[key] = '[Circular]';\n\t}\n\n\tfor (const {property, enumerable} of commonProperties) {\n\t\tif (typeof from[property] !== 'undefined' && from[property] !== null) {\n\t\t\tObject.defineProperty(to, property, {\n\t\t\t\tvalue: isErrorLike(from[property]) ? continueDestroyCircular(from[property]) : from[property],\n\t\t\t\tenumerable: forceEnumerable ? true : enumerable,\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn to;\n};\n\nexport function serializeError(value, options = {}) {\n\tconst {\n\t\tmaxDepth = Number.POSITIVE_INFINITY,\n\t\tuseToJSON = true,\n\t} = options;\n\n\tif (typeof value === 'object' && value !== null) {\n\t\treturn destroyCircular({\n\t\t\tfrom: value,\n\t\t\tseen: [],\n\t\t\tforceEnumerable: true,\n\t\t\tmaxDepth,\n\t\t\tdepth: 0,\n\t\t\tuseToJSON,\n\t\t\tserialize: true,\n\t\t});\n\t}\n\n\t// People sometimes throw things besides Error objects…\n\tif (typeof value === 'function') {\n\t\t// `JSON.stringify()` discards functions. We do too, unless a function is thrown directly.\n\t\t// We intentionally use `||` because `.name` is an empty string for anonymous functions.\n\t\treturn `[Function: ${value.name || 'anonymous'}]`;\n\t}\n\n\treturn value;\n}\n\nexport function deserializeError(value, options = {}) {\n\tconst {maxDepth = Number.POSITIVE_INFINITY} = options;\n\n\tif (value instanceof Error) {\n\t\treturn value;\n\t}\n\n\tif (isMinimumViableSerializedError(value)) {\n\t\tconst Error = getErrorConstructor(value.name);\n\t\treturn destroyCircular({\n\t\t\tfrom: value,\n\t\t\tseen: [],\n\t\t\tto: new Error(),\n\t\t\tmaxDepth,\n\t\t\tdepth: 0,\n\t\t\tserialize: false,\n\t\t});\n\t}\n\n\treturn new NonError(value);\n}\n\nexport function isErrorLike(value) {\n\treturn Boolean(value)\n\t&& typeof value === 'object'\n\t&& 'name' in value\n\t&& 'message' in value\n\t&& 'stack' in value;\n}\n\nfunction isMinimumViableSerializedError(value) {\n\treturn Boolean(value)\n\t&& typeof value === 'object'\n\t&& 'message' in value\n\t&& !Array.isArray(value);\n}\n\nexport {default as errorConstructors} from './error-constructors.js';\n","import { errorConstructors } from \"serialize-error\";\nimport { NodeNotFoundError, KeyError } from \"@zarrita/core\";\n// geotiff doesn't export its error types...\n\n/** Groups possible load errors into a few broad categories which we can give similar guidance to the user about. */\nexport let VolumeLoadErrorType = /*#__PURE__*/function (VolumeLoadErrorType) {\n  VolumeLoadErrorType[\"UNKNOWN\"] = \"unknown\";\n  VolumeLoadErrorType[\"NOT_FOUND\"] = \"not_found\";\n  VolumeLoadErrorType[\"TOO_LARGE\"] = \"too_large\";\n  VolumeLoadErrorType[\"LOAD_DATA_FAILED\"] = \"load_data_failed\";\n  VolumeLoadErrorType[\"INVALID_METADATA\"] = \"invalid_metadata\";\n  VolumeLoadErrorType[\"INVALID_MULTI_SOURCE_ZARR\"] = \"invalid_multi_source_zarr\";\n  return VolumeLoadErrorType;\n}({});\nexport class VolumeLoadError extends Error {\n  constructor(message, options) {\n    super(message, options);\n    this.name = \"VolumeLoadError\";\n    this.type = options?.type ?? VolumeLoadErrorType.UNKNOWN;\n  }\n}\n\n// serialize-error only ever calls an error constructor with zero arguments. The required `ErrorConstructor`\n// type is a bit too restrictive - as long as the constructor can be called with no arguments it's fine.\nerrorConstructors.set(\"NodeNotFoundError\", NodeNotFoundError);\nerrorConstructors.set(\"KeyError\", KeyError);\nerrorConstructors.set(\"VolumeLoadError\", VolumeLoadError);\n\n/** Curried function to re-throw an error wrapped in a `VolumeLoadError` with the given `message` and `type`. */\nexport function wrapVolumeLoadError(message = \"Unknown error occurred while loading volume data\", type = VolumeLoadErrorType.UNKNOWN, ignore) {\n  return e => {\n    if (ignore !== undefined && e === ignore) {\n      return e;\n    }\n    if (e instanceof VolumeLoadError) {\n      throw e;\n    }\n    console.log(`Error loading volume data: ${e}`);\n    throw new VolumeLoadError(message, {\n      type,\n      cause: e\n    });\n  };\n}","import { fromUrl } from \"geotiff\";\nimport { serializeError } from \"serialize-error\";\nimport { VolumeLoadError, VolumeLoadErrorType } from \"../loaders/VolumeLoadError.js\";\n// from TIFF\nconst SAMPLEFORMAT_UINT = 1;\nconst SAMPLEFORMAT_INT = 2;\nconst SAMPLEFORMAT_IEEEFP = 3;\nfunction getDtype(sampleFormat, bytesPerPixel) {\n  if (sampleFormat === SAMPLEFORMAT_IEEEFP) {\n    if (bytesPerPixel === 4) {\n      return \"float32\";\n    }\n  } else if (sampleFormat === SAMPLEFORMAT_INT) {\n    if (bytesPerPixel === 1) {\n      return \"int8\";\n    } else if (bytesPerPixel === 2) {\n      return \"int16\";\n    } else if (bytesPerPixel === 4) {\n      return \"int32\";\n    }\n  } else if (sampleFormat === SAMPLEFORMAT_UINT) {\n    if (bytesPerPixel === 1) {\n      return \"uint8\";\n    } else if (bytesPerPixel === 2) {\n      return \"uint16\";\n    } else if (bytesPerPixel === 4) {\n      return \"uint32\";\n    }\n  }\n  console.error(`TIFF Worker: unsupported sample format ${sampleFormat} and bytes per pixel ${bytesPerPixel}`);\n  return \"uint8\";\n}\nfunction castToArray(buf, bytesPerPixel, sampleFormat) {\n  if (sampleFormat === SAMPLEFORMAT_IEEEFP) {\n    if (bytesPerPixel === 4) {\n      return new Float32Array(buf);\n    }\n  } else if (sampleFormat === SAMPLEFORMAT_INT) {\n    if (bytesPerPixel === 1) {\n      return new Int8Array(buf);\n    } else if (bytesPerPixel === 2) {\n      return new Int16Array(buf);\n    } else if (bytesPerPixel === 4) {\n      return new Int32Array(buf);\n    }\n  } else if (sampleFormat === SAMPLEFORMAT_UINT) {\n    if (bytesPerPixel === 1) {\n      return new Uint8Array(buf);\n    } else if (bytesPerPixel === 2) {\n      return new Uint16Array(buf);\n    } else if (bytesPerPixel === 4) {\n      return new Uint32Array(buf);\n    }\n  }\n  console.error(`TIFF Worker: unsupported sample format ${sampleFormat} and bytes per pixel ${bytesPerPixel}`);\n  return new Uint8Array(buf);\n}\nasync function loadTiffChannel(e) {\n  // TODO index images by time\n  // const time = e.data.time;\n\n  const channelIndex = e.data.channel;\n  const tilesizex = e.data.tilesizex;\n  const tilesizey = e.data.tilesizey;\n  const sizez = e.data.sizez;\n  const sizec = e.data.sizec;\n  const dimensionOrder = e.data.dimensionOrder;\n  const bytesPerSample = e.data.bytesPerSample;\n  const tiff = await fromUrl(e.data.url, {\n    allowFullFile: true\n  });\n\n  // load the images of this channel from the tiff\n  // today assume TCZYX so the slices are already in order.\n  let startindex = 0;\n  let incrementz = 1;\n  if (dimensionOrder === \"XYZCT\") {\n    // we have XYZCT which is the \"good\" case\n    // TCZYX\n    startindex = sizez * channelIndex;\n    incrementz = 1;\n  } else if (dimensionOrder === \"XYCZT\") {\n    // we have to loop differently to increment channels\n    // TZCYX\n    startindex = channelIndex;\n    incrementz = sizec;\n  }\n\n  // huge assumption: planes are in a particular order relative to z and c\n\n  // get first plane, to get some details about the image\n  const image = await tiff.getImage(startindex);\n  // on first image, set up some stuff:\n  const sampleFormat = image.getSampleFormat();\n  const bytesPerPixel = image.getBytesPerPixel();\n  // allocate a buffer for one channel\n  const buffer = new ArrayBuffer(tilesizex * tilesizey * sizez * bytesPerPixel);\n  const u8 = new Uint8Array(buffer);\n  for (let imageIndex = startindex, zslice = 0; zslice < sizez; imageIndex += incrementz, ++zslice) {\n    const image = await tiff.getImage(imageIndex);\n    // download and downsample on client\n    const result = await image.readRasters({\n      width: tilesizex,\n      height: tilesizey\n    });\n    const arrayresult = Array.isArray(result) ? result[0] : result;\n    // deposit in full channel array in the right place\n    const offset = zslice * tilesizex * tilesizey;\n    if (arrayresult.BYTES_PER_ELEMENT > 4) {\n      throw new VolumeLoadError(\"byte size not supported yet: \" + arrayresult.BYTES_PER_ELEMENT, {\n        type: VolumeLoadErrorType.INVALID_METADATA\n      });\n    } else if (arrayresult.BYTES_PER_ELEMENT !== bytesPerSample) {\n      throw new VolumeLoadError(\"tiff bytes per element mismatch with OME metadata\", {\n        type: VolumeLoadErrorType.INVALID_METADATA\n      });\n    } else {\n      u8.set(new Uint8Array(arrayresult.buffer), offset * arrayresult.BYTES_PER_ELEMENT);\n    }\n  }\n  // all slices collected, now resample to 8 bits full data range\n  const src = castToArray(buffer, bytesPerPixel, sampleFormat);\n  const dtype = getDtype(sampleFormat, bytesPerPixel);\n  let chmin = src[0];\n  let chmax = src[0];\n  for (let j = 0; j < src.length; ++j) {\n    const val = src[j];\n    if (val < chmin) {\n      chmin = val;\n    }\n    if (val > chmax) {\n      chmax = val;\n    }\n  }\n  return {\n    data: src,\n    channel: channelIndex,\n    range: [chmin, chmax],\n    dtype: dtype,\n    isError: false\n  };\n}\nself.onmessage = async e => {\n  try {\n    const result = await loadTiffChannel(e);\n    self.postMessage(result, [result.data.buffer]);\n  } catch (err) {\n    self.postMessage({\n      isError: true,\n      error: serializeError(err)\n    });\n  }\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [714], () => (__webpack_require__(4389)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/vole-app/pr-preview/pr-370/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t283: 1,\n\t647: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk_aics_vole_app\"] = self[\"webpackChunk_aics_vole_app\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","Error","commonProperties","property","enumerable","toJsonWasCalled","WeakSet","destroyCircular","from","seen","to","forceEnumerable","maxDepth","depth","useToJSON","serialize","name","Array","isArray","isErrorLike","get","push","toJSON","has","add","json","delete","continueDestroyCircular","value","key","Object","entries","Uint8Array","constructor","pipe","includes","defineProperty","configurable","writable","serializeError","options","Number","POSITIVE_INFINITY","Boolean","VolumeLoadErrorType","VolumeLoadError","message","super","this","type","UNKNOWN","set","self","onmessage","async","result","e","channelIndex","data","channel","tilesizex","tilesizey","sizez","sizec","dimensionOrder","bytesPerSample","tiff","url","allowFullFile","startindex","incrementz","image","getImage","sampleFormat","getSampleFormat","bytesPerPixel","getBytesPerPixel","buffer","ArrayBuffer","u8","imageIndex","zslice","readRasters","width","height","arrayresult","offset","BYTES_PER_ELEMENT","INVALID_METADATA","src","buf","Float32Array","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","console","error","castToArray","dtype","getDtype","chmin","chmax","j","length","val","range","isError","loadTiffChannel","postMessage","err","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","keys","every","splice","r","d","definition","o","f","chunkId","Promise","all","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","then"],"sourceRoot":""}