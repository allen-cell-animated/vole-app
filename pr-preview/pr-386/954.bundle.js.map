{"version":3,"file":"954.bundle.js","mappings":"iJAEIA,E,UACJ,MAwBA,IAxBcA,EAAK,MACjB,WAAAC,CAAYC,EAAQ,GAClB,GAAIA,GAAS,GAAKA,EAAQ,EACxB,MAAM,IAAIC,MAAM,iEAElBC,KAAKF,MAAQA,CACf,CACA,iBAAOG,EAAW,MAAEH,IAClB,OAAO,IAAIF,EAAGE,EAChB,CACA,MAAAI,CAAOC,GAEL,OADgB,EAAAC,EAAKC,QAAQF,EAAM,CAAEL,MAAOE,KAAKF,OAEnD,CACA,MAAAQ,CAAOH,EAAMI,GACX,MAAMC,EAAe,EAAAJ,EAAKK,QAAQN,GAClC,YAAY,IAARI,GACFA,EAAIG,IAAIF,GACDD,GAEFC,CACT,IACIG,QAAU,OAAQf,E","sources":["webpack://@aics/vole-app/./node_modules/numcodecs/zlib.js"],"sourcesContent":["import { p as pako } from './pako.esm-856454b6.js';\n\nvar _a;\nconst Zlib = (_a = class {\n  constructor(level = 1) {\n    if (level < -1 || level > 9) {\n      throw new Error(\"Invalid zlib compression level, it should be between -1 and 9\");\n    }\n    this.level = level;\n  }\n  static fromConfig({ level }) {\n    return new _a(level);\n  }\n  encode(data) {\n    const gzipped = pako.deflate(data, { level: this.level });\n    return gzipped;\n  }\n  decode(data, out) {\n    const uncompressed = pako.inflate(data);\n    if (out !== void 0) {\n      out.set(uncompressed);\n      return out;\n    }\n    return uncompressed;\n  }\n}, _a.codecId = \"zlib\", _a);\n\nexport default Zlib;\n"],"names":["_a","constructor","level","Error","this","fromConfig","encode","data","p","deflate","decode","out","uncompressed","inflate","set","codecId"],"sourceRoot":""}